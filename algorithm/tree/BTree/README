B树
B树（B-tree）是一种树状数据结构，能够用来存储排序后的数据。这种数据结构能够让
查找数据、循序存取、插入数据及删除的动作，都在对数时间内完成。B树，概括来说是
一个一般化的二叉查找树，可以拥有多于2个子节点。与自平衡二叉查找树不同，B-树为
系统最优化大块数据的读和写操作。B-tree算法减少定位记录时所经历的中间过程，从而
加快存取速度。这种数据结构常被应用在数据库和文件系统的实作上。

M阶B树性质：
1. 每个节点最多包含m个子节点(m > 2, 如果m=2,则是二叉树);
2. 除根结点和叶节点外，每个节点至少包含ceil(m / 2)个子节点;
3. 根节点必须至少包含2个节点(特殊情况除外：没有孩子的根节点);
4. 所有叶子节点均处于同一层.

------------------------------------------------------------------------------
insert操作：
1. 遍历B树，并找到可以插入的叶节点；
2. 如果当前叶节点的键 < m - 1则按递增顺序插入元素，结束；
3. 如果当前叶节点的键 == m - 1则：
   a. 按递增顺序插入元素;
   b. 当前节点以中值元素为中心拆分为左右两个节点，并将中值元素推送到其父节点；
   c. 父节点键 == m - 1，则重复b，否则结束

------------------------------------------------------------------------------
delete操作：
